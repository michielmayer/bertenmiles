<!DOCTYPE html>
<html>
  <head>
    <title>Basic Snake HTML Game</title>
    <meta name="viewport" content="initial-scale=1.0, width=device-width" />
    <meta charset="UTF-8" />
    <style>
      html,
      body,
      .wrapper {
        height: 100%;
        margin: 0;
      }

      .wrapper {
        background: black;
        display: flex;
        align-items: center;
        justify-content: center;
      }
      canvas {
        border: 1px solid white;
      }
    </style>
  </head>
  <body>
    <%- include('header'); -%>
    <div class="wrapper">
      <canvas width="400" height="400" id="game"></canvas>
    </div>
    <script>
      let canvas = document.getElementById('game');
      let context = canvas.getContext('2d');

      let vierkantje = 16; // is dus 16 pixels groot
      let aantal = 0; // dit houdt bij hoe vaak er geloopt is. (kun je de snelheid van de slang mee bepalen)

      let slang = {
        x: 160, // waar de slang is in horizontale richting
        y: 160, // waar de slang is in verticale richting

        snelheidX: vierkantje, // slang snelheid in horizontale richting. Bij elke loop verplaatst de slang over een afstand van vierkantje (16 pixels)
        snelheidY: 0, // slang snelheid in verticale richting. Die is dus in het begin 0.

        cellen: [], // dit houdt bij welke cellen allemaal worden ingenomen door de slang

        maxCellen: 4, // dit is de lengte van de slang. groeit als de slang een appel eet
      };
      let appel = {
        x: 320, // waar de appel is in horizontale richting
        y: 320, // waar de appel is in verticale richting
      };

      function krijgEenWillekeurigGetal(min, max) {
        return Math.floor(Math.random() * (max - min)) + min;
      }

      // game loop
      function loop() {
        requestAnimationFrame(loop);

        // slow game loop to 15 fps instead of 60 (60/15 = 4)
        if (++aantal < 8) {
          return;
        }

        aantal = 0;
        context.clearRect(0, 0, canvas.width, canvas.height); // het hele scherm zwart maken

        // verplaats de slang met zijn snelheid
        slang.x += slang.snelheidX;
        slang.y += slang.snelheidY;

        // komt de slang buiten het scherm:
        // plaats dan de slang aan de andere kant op de rand van het scherm
        // eerst verticaal
        if (slang.x < 0) {
          slang.x = canvas.width - vierkantje;
        } else if (slang.x >= canvas.width) {
          slang.x = 0;
        }

        // en dan horizontaal
        if (slang.y < 0) {
          slang.y = canvas.height - vierkantje;
        } else if (slang.y >= canvas.height) {
          slang.y = 0;
        }

        // er komt een cel bij de slang aan de voorkant van de array, dus het hoofd van de slang
        slang.cellen.unshift({ x: slang.x, y: slang.y });

        // het puntje van de start moet weggehaald worden
        if (slang.cellen.length > slang.maxCellen) {
          slang.cellen.pop();
        }

        // teken de appel op het scherm
        context.fillStyle = 'red';
        context.fillRect(appel.x, appel.y, vierkantje - 1, vierkantje - 1);

        // teken de slang op het scherm, cel voor cel, beginnend bij het hoofd
        context.fillStyle = 'green';
      
        for (let j = 0; j < slang.cellen.length; j++) {
          let cell = slang.cellen[j]
          context.fillRect(cell.x, cell.y, vierkantje - 1, vierkantje - 1);

          // check of de slang de appel heeft gegeten
          if (cell.x === appel.x && cell.y === appel.y) {
            // ja, hij heeft hem gegeten, dus:
            slang.maxCellen++; // het lichaam van de slang wordt 1 cel langer

            // en de appel wordt op een willekeurige andere plek neergezet
            appel.x = krijgEenWillekeurigGetal(0, 25) * vierkantje;
            appel.y = krijgEenWillekeurigGetal(0, 25) * vierkantje;
          }

          // check of de slang in botsing komt met zichzelf
          for (let i = j + 1; i < slang.cellen.length; i++) {
            if (cell.x === slang.cellen[i].x && cell.y === slang.cellen[i].y) {
              // botsing: je hebt verloren, dus opnieuw beginnen. Alle waarden worden weer teruggezet naar de beginstand.
              slang.x = 160;
              slang.y = 160;
              slang.cellen = [];
              slang.maxCellen = 4;
              slang.snelheidX = vierkantje;
              slang.snelheidY = 0;

              // ook de appel wordt weer op een willekeurige plek neergezet
              appel.x = krijgEenWillekeurigGetal(0, 25) * vierkantje;
              appel.y = krijgEenWillekeurigGetal(0, 25) * vierkantje;
            }
          }
        };
      }

      // luister of de speler op een knop drukt
      document.addEventListener('keydown', function (e) {
        // als je op links drukt terwijl je naar links of rechts beweegt, gebeurt er niets.

        // pijltjes toets naar links
        if (e.which === 37 && slang.snelheidX === 0) {
          slang.snelheidX = -vierkantje;
          slang.snelheidY = 0;
        }
        // pijltjes toets naar rechts
        else if (e.which === 39 && slang.snelheidX === 0) {
          slang.snelheidX = vierkantje;
          slang.snelheidY = 0;
        }
        // pijltjes toets naar boven
        else if (e.which === 38 && slang.snelheidY === 0) {
          slang.snelheidY = -vierkantje;
          slang.snelheidX = 0;
        }
        // pijltjes toets naar beneden
        else if (e.which === 40 && slang.snelheidY === 0) {
          slang.snelheidY = vierkantje;
          slang.snelheidX = 0;
        }
      });

      // start het spel
      requestAnimationFrame(loop);
    </script>
  </body>
</html>
